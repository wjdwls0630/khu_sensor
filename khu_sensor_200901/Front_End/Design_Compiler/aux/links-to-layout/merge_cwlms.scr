#!/bin/csh -f
# $Id$
# date: 2000. 4. 24
# Author: Hae-jin Song
# Version: v1.2
# This is script to split and merge two CWLM files: 
#   CWLM file 1: generated with -this_level_nets_only option
#   CWLM file 2: generated without -this_level_nets_only option

if ( $3 != "-this_level" ) then
	echo "*** Error: Wrong option: $3"
	goto usage
endif 

if ( ! -e $4 ) then
	echo "*** Error: Unexisting file: $4"
endif

if ( $#argv == 5 ) then
   if ( $5 != "-hp")  goto usage
else if ( $#argv != 4 ) then
   goto usage
endif

if ( $#argv == 5 ) then
   setenv AWK awk
else
   setenv AWK nawk
endif


cat <<! >! top.awk

BEGIN{
	cnt1=1; cnt2=1;
	p_start = 0
}
FILENAME == ARGV[1] {
	mod_name = sprintf("%s%s",\$1,"_wl")
	insts [ cnt1++] = mod_name	
}
FILENAME == ARGV[2] {
	if ( match(\$1,"wire_load_table")) {
		for (i=1; i< cnt1; i++) {
			split(\$1,a,"\"")
			if ( a[2] == insts[i]) {
				find = 1;
				p_start = 1
				break;
			} else find = 0;
		}
	}

	if ( find == 1 ) {
		if ( p_start == 1  && \$1 == "}") {
			print \$0; p_start = 0
			find = 0
		} else if ( p_start == 1 ) {
			print \$0
		}
	}
}
!

$AWK -f top.awk $4 $1>! cwlm.tmp

cat <<! >! non_top.awk

BEGIN{
	cnt1=1; cnt2=1;
	p_start = 0
}
FILENAME == ARGV[1] {
	mod_name = sprintf("%s%s",\$1,"_wl")
	insts [ cnt1++] = mod_name	
}
FILENAME == ARGV[2] {
	if ( match(\$1,"wire_load_table")) {
		for (i=1; i< cnt1; i++) {
			split(\$1,a,"\"")
			if ( a[2] == insts[i]) {
				find = 0;
				break;
			} else {
				find = 1;
				p_start =1;
			}	
		}
	}

	if ( find == 1 ) {
		if ( p_start == 1  && \$1 == "}") {
			print \$0; p_start = 0
			find = 0
		} else if ( p_start == 1 ) {
			print \$0
		}
	}
}
!


$AWK -f non_top.awk $4 $2 >! cwlm.tmp2

cat cwlm.tmp cwlm.tmp2  | sed '/ -/d' >! cwlm.tmp3
\rm cwlm.tmp cwlm.tmp2 top.awk non_top.awk

set out_file=cwlm.wl
sed '/ -/d' cwlm.tmp3 >! cwlm.tmp4

cat <<! >! normal.awk
BEGIN{
        on_air = 0
        error = 0
        end =  0
}
{
        if (match(\$1,"wire_load_table")) {
                on_air = 1
                o_value = 0
           wlt = \$1
           print \$0
        } else if ( \$1 == "}" ) {
           print all
           o_value = 0
           end = 1
           print \$0
        } else if ( on_air == 1 ) {
                if ( match(\$1,"fanout")) {
                        pre_all = \$0

                        gsub(/,/,"",\$2);

                        gsub(/;/,"",\$3)
                        gsub(/\)/,"",\$3)
                        p_value = \$3

                        if ( ((p_value != o_value ) && (end == 0 )) || \$2 == 2  ) {
                                print all
                        }
                        all = pre_all
                        o_value = p_value
                        end = 0
                }
        } else {
                print \$0
        }
}
!

$AWK -f normal.awk cwlm.tmp4 >! $out_file
\rm normal.awk  cwlm.tmp3 cwlm.tmp4


echo "Completed successfully"
echo "Generated file: cwlm.wl"

exit

usage:
cat << !
       usage: merge_cwlms.scr [top-level.wl sub_block.wl -this_level filename] [-hp]

              top-level.wl: with -this_level_nets_only
              sub_block.wl: without -this_level_nets_only
              filename: this file includes instance names of modules to be used 
                        as this-level only modules.
              -hp: for HP machine

		 example) merge_cwlms.scr top.wl sub_block.wl -this_level top_modules 
!
